{"remainingRequest":"/Users/durga/Desktop/kinduct-home-challenge/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/durga/Desktop/kinduct-home-challenge/client/src/components/FileUpload.vue?vue&type=style&index=0&id=266f3366&scoped=true&lang=css&","dependencies":[{"path":"/Users/durga/Desktop/kinduct-home-challenge/client/src/components/FileUpload.vue","mtime":1596559856038},{"path":"/Users/durga/Desktop/kinduct-home-challenge/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/durga/Desktop/kinduct-home-challenge/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/durga/Desktop/kinduct-home-challenge/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/durga/Desktop/kinduct-home-challenge/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/durga/Desktop/kinduct-home-challenge/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmJ1dHRvbnsKICBwYWRkaW5nOiA1cHggMTBweDsKICBjb2xvcjogd2hpdGU7CiAgYmFja2dyb3VuZDogYmx1ZTsKfQo="},{"version":3,"sources":["FileUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA","file":"FileUpload.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <input type=\"file\" id=\"file\" ref=\"file\" v-on:change=\"handleFileUpload()\"/>\n    <button v-on:click=\"submitFile()\">Submit</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'file-upload',\n  data: () => {\n    return {\n      file: ''\n    }\n  },\n  methods: {\n    submitFile(){\n      let formData = new FormData();\n      formData.append('file', this.file);\n      this.$http.post( 'http://localhost:3000/players',\n          formData,\n          {\n          headers: {\n              'Content-Type': 'multipart/form-data'\n          }\n        }\n      ).then(function(){\n          this.flash('Uploaded successfully', 'success');\n        })\n        .catch(function(){\n          this.flash('Upload failed', 'error');\n        });\n      },\n\n      handleFileUpload(){\n        this.file = this.$refs.file.files[0];\n      }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nbutton{\n  padding: 5px 10px;\n  color: white;\n  background: blue;\n}\n</style>\n"]}]}